# Generated by Django 3.2.16 on 2023-04-29 23:35

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptPart1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_type', models.CharField(choices=[('scratched', 'Scratched'), ('damaged', 'Damaged'), ('accident', 'Accident'), ('broken', 'Broken')], max_length=20)),
                ('description', models.TextField(blank=True, default='')),
                ('customer_initial', models.CharField(default='', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptPart2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_of_call', models.CharField(blank=True, default='', max_length=100)),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('time_start', models.TimeField(blank=True, null=True)),
                ('time_finish', models.TimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('customer_address', models.CharField(blank=True, default='', max_length=200)),
                ('pickup_address', models.CharField(blank=True, default='', max_length=200)),
                ('dropoff_address', models.CharField(blank=True, default='', max_length=200)),
                ('phone', models.CharField(blank=True, default='', max_length=20)),
                ('dl', models.CharField(blank=True, default='', max_length=20)),
                ('jumpstart', models.BooleanField(default=False)),
                ('tow', models.BooleanField(default=False)),
                ('tirechange', models.BooleanField(default=False)),
                ('lockout', models.BooleanField(default=False)),
                ('year', models.CharField(blank=True, default='', max_length=20)),
                ('make', models.CharField(blank=True, default='', max_length=50)),
                ('color', models.CharField(blank=True, default='', max_length=50)),
                ('model', models.CharField(blank=True, default='', max_length=50)),
                ('license_no', models.CharField(blank=True, default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptPart3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vin_number', models.CharField(blank=True, default='', max_length=20)),
                ('policy_number', models.CharField(blank=True, default='', max_length=20)),
                ('hook_up', models.BooleanField(blank=True, default=None, null=True)),
                ('winch', models.BooleanField(blank=True, default=None, null=True)),
                ('flares', models.BooleanField(blank=True, default=None, null=True)),
                ('dollies', models.BooleanField(blank=True, default=None, null=True)),
                ('scotch_blocks', models.BooleanField(blank=True, default=None, null=True)),
                ('ramps', models.BooleanField(blank=True, default=None, null=True)),
                ('snatch_blocks', models.BooleanField(blank=True, default=None, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptPart4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mileage_finish', models.IntegerField(blank=True, default=0, null=True)),
                ('mileage_total', models.IntegerField(blank=True, default=0, null=True)),
                ('labor_time_start', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('labor_time_finish', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('labor_time_total', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('extra_person_start', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('extra_person_finish', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('extra_person_total', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('towing_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('mileage_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('labor_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('extra_person_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('special_equipment_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('storage_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='towingapp.conversation', verbose_name='Conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
        ),
        migrations.CreateModel(
            name='Clock_in',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clock_status', models.CharField(choices=[('clock-in', 'Clock-in'), ('clock-out', 'Clock-out')], default='clock-in', max_length=10)),
                ('clock_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
